# Default values for lumenvox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

timezone: UTC  # or America/New_York, Europe/Rome, etc.

# Persistent volume configuration
platform: minikube
provider: ""
volumeRoot: "/data"
volumeServer: ""

rabbitmq:
  retryTime: 60

logging:
  enableElasticsearch: false
  defaultLevel: "Warning"
  overrideMicrosoftLevel: "Warning"
  overrideSystemLevel: "Warning"
  overrideGrpcLevel: "Warning"

https:
  certificate: ""
  certificateKey: ""
  certificatePassword: ""
  useSelfSignedCert: false

image: {}

global:
  licensing:
  # Note: licensing (and therefore system) will not work without a valid clusterGuid value
    clusterGuid: "GET-CLUSTER-GUID-FROM-LUMENVOX"
    reportFreqMins: "1440"
    reportSyncHour: "1"
    reportSyncMin: "0"
  defaultNamespace: "lumenvox"
  # Note that you need to enter the complete domain name including the "." as per the example below
  hostnameSuffix: ".testmachine.com"
  lumenvox:
    ingress:
      className: nginx
      commonAnnotations:
        - name: "nginx.ingress.kubernetes.io/ssl-redirect"
          value: "true"
        - name: "nginx.ingress.kubernetes.io/proxy-body-size"
          value: "0"
        - name: "nginx.ingress.kubernetes.io/proxy-read-timeout"
          value: "350"
      grpcAnnotations:
        - name: "nginx.ingress.kubernetes.io/backend-protocol"
          value: "GRPC"
      httpAnnotations:
        - name: "nginx.ingress.kubernetes.io/backend-protocol"
          value: "HTTP"
    # Maximum amount of time allowed for deployment database connection to succeed
    deploymentReconnectionTimeoutSec: 30
    probes:
      periodSeconds: 5
    metrics:
      # Whether to expose internal services' ingress (likely only used by LumenVox development)
      enableEndpoints: false
    enableAudit: false
    service:
      # Time from startup to allow deployment service
      startDelaySeconds: 5
      livenessProbe:
        enabled: true
    enforceLimits: false
    # Cluster-level logging verbosity. Options: debug, info, warn, error, dpanic, panic, fatal
    loggingVerbosity: "info"
    # Default TTL for Redis Keys, 3 hours
    # Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h", "d", "w", "y" Examples: "300ms", "-1.5h" or "2h45m"
    redisTtl: 3h
    # download link for resource service to download models and manifests. Default is the LumenVox S3 location.
    resourceDownloadEndpoint: "https://assets.lumenvox.com/"
    # Default expiration for RabbitMQ queues in milliseconds
    rabbitmqQueueExpirationMs: 180000
    schedulerName: ""
  image:
    repository: "lumenvox"
    pullPolicy: IfNotPresent
    tag: ":6.1"
  imagePullSecrets: []
  rabbitmq:
    enableTLS: false
    auth:
      existingPasswordSecret: "rabbitmq-existing-secret"
    connection:
      url: "external-services-rabbitmq.lumenvox"
      port: 5672
      user: "lvuser"
    init:
      checkManagementEndpoint: false
    # certificates and keys below need to be Base64 encoded certificate versions of .pem/.crt files
    caCertificate: ""
    clientCertificate: ""
    clientKey: ""
  redis:
    enableTLS: false
    auth:
      existingSecret: redis-existing-secret
    connection:
      url: "external-services-redis-master.lumenvox"
      port: 6379
  mongodb:
    auth:
      rootUser: 'lvuser'
      existingSecret: mongodb-existing-secret
    connection:
      url: "external-services-mongodb.lumenvox"
      port: 27017
    atlas: false
  postgresql:
    auth:
      existingSecret: postgres-existing-secret
    connection:
      url: "external-services-postgresql.lumenvox"
      port: 5432
      user: "lvuser"
      # default database name for Postgres
      databaseName: "lumenvox_db"
      # default schema name for Postgres database
      databaseSchema: "public"
      ssl:
        # mode: disable or verify-ca
        mode: "disable"
        # base64-encoded certificate to verify postgres server certificate
        caCertificate: ""
    commandTimeoutSeconds: 100
    runMigrations: 'true'
    exitAfterMigrations: 'false'
  linkerd:
    enabled: true
  enabled:
    lumenvoxSpeech: false
    lumenvoxVb: false
    lumenvoxCommon: true
  # enabling ITN allows for the ITN service to be installed and allows for ITN post-processing to be called via the API.
  enableItn: false
  # enabling NLU allows for the NLU service to be installed and allows for NLU interactions to be called via the API.
  enableNlu: false
  # enabling Diarization allows for the Diarization service to be installed and allows for Diarization interactions to be called via the API.
  enableDiarization: false
  # enabling LID allows for the LID service to be installed and allows for LID interactions to be called via the API.
  enableLanguageId: false
  # setting the minimalInstall value to true will result in only CPA interactions bing possible. The ASR and TTS services will not be installed.
  minimalInstall: false
  asrDefaultVersion: "4.1.0"
  neuralttsDefaultVersion: "4.0.0"
  ttsDefaultVersion: "1.0"
  vbDefaultVersion: "2.1.15"
  lidVersion: "2.0.0"
  # Enabling the LumenVox API Healthceck below allows external access to the HTTP healthcheck /health.
  enableLumenvoxapiHealthcheck: false
  extraRootCaCerts: false
