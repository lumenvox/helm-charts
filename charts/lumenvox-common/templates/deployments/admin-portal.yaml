apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-portal
  namespace: {{ default .Release.Namespace .Values.global.defaultNamespace }}
  labels:
    app: admin-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-portal
  template:
    metadata:
      labels:
        app: admin-portal
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        {{- if .Values.global.linkerd.enabled }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      containers:
        - name: admin-portal
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/admin-portal{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          ports:
            - name: portal
              containerPort: 3001
            - name: http
              containerPort: 5110
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.global.lumenvox.service.startDelaySeconds }}
            periodSeconds: {{ .Values.global.lumenvox.probes.periodSeconds }}
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
            {{- if .Values.global.lumenvox.enforceLimits }}
            limits:
              cpu: 100m
              memory: 50Mi
            {{- end }}
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            {{- if .Values.global.rabbitmq.auth.existingPasswordSecret }}
            - secretRef:
                name: {{ .Values.global.rabbitmq.auth.existingPasswordSecret }}
            {{- end }}
          env:
            {{- if not .Values.global.rabbitmq.auth.existingPasswordSecret }}
            - name: rabbitmq-password
              value: '{{ .Values.global.rabbitmq.auth.password }}'
            {{- end }}
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: '{{ .Values.global.lumenvox.loggingVerbosity }}'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '{{ .Values.global.lumenvox.redisTtl }}'  
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host={{ .Values.global.rabbitmq.connection.url }};port={{ .Values.global.rabbitmq.connection.port }};username={{ .Values.global.rabbitmq.connection.user }};password=$(rabbitmq-password);requestedHeartbeat=10{{ if .Values.global.rabbitmq.enableTLS }};tls=true{{ end }}'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '{{ .Values.global.lumenvox.rabbitmqQueueExpirationMs }}'
            - name: SERVICE_EXTERNAL_ADDRESSES__REPORTING_API
              value: 'https://reporting-api{{ .Values.global.hostnameSuffix }}'
            - name: SERVICE_EXTERNAL_ADDRESSES__MANAGEMENT_API
              value: 'https://management-api{{ .Values.global.hostnameSuffix }}'
            - name: SERVICE_EXTERNAL_ADDRESSES__LUMENVOX_API
              value: 'https://lumenvox-api{{ .Values.global.hostnameSuffix }}'
            - name: SERVICE_EXTERNAL_ADDRESSES__DEPLOYMENT_PORTAL
              value: 'https://deployment-portal{{ .Values.global.hostnameSuffix }}'
            - name: SERVICE_EXTERNAL_ADDRESSES__ADMIN_PORTAL
              value: 'https://admin-portal{{ .Values.global.hostnameSuffix }}'
            {{- if .Values.global.enabled.lumenvoxSpeech }}
            {{- if .Values.global.asrLanguages }}
            - name: CLUSTER_LANGUAGES__ASR_LANGUAGES
              value: '{{ template "lumenvox-speech.CLUSTER_LANGUAGES__ASR_LANGUAGES" . }}'
            {{- end }}
            {{- if .Values.global.ttsLanguages }}
            - name: CLUSTER_LANGUAGES__TTS_LANGUAGES
              value: '{{ template "lumenvox-speech.CLUSTER_LANGUAGES__TTS_LANGUAGES" . }}'
            - name: CLUSTER_LANGUAGES__TTS_VOICES
              value: '{{ template "lumenvox-speech.CLUSTER_LANGUAGES__TTS_VOICES" . }}'
            {{- end }}
            {{- end }}
            {{- if .Values.global.enabled.lumenvoxVb }}
            - name: CLUSTER_LANGUAGES__VB_ACTIVE
              value: '{{ template "lumenvox-vb.CLUSTER_LANGUAGES__VB_ACTIVE" . }}'
            {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
        - name: wait-for-deployment-service
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/cloud-init-tools{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          command: ["curl2"]
          args: ["http://deployment-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}:5110/health", "Deployment Service"]
      {{- if .Values.global.lumenvox.schedulerName }}
      schedulerName: {{ .Values.global.lumenvox.schedulerName }}
      {{- end }}
