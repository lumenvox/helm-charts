apiVersion: apps/v1
kind: Deployment
metadata:
  name: assure-api
  namespace: {{ default .Release.Namespace .Values.global.defaultNamespace }}
  labels:
    app: assure-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assure-api
  template:
    metadata:
      labels:
        app: assure-api
        # No Prometheus scraping for now
      annotations:
        {{- if .Values.global.linkerd.enabled }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      containers:
        - name: assure-api
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/cloud-assure-api{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: {{ .Values.global.lumenvox.probes.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: {{ .Values.global.lumenvox.probes.periodSeconds }}
          resources:
            requests:
              cpu: 500m
              memory: 1000Mi
            {{- if .Values.global.lumenvox.enforceLimits }}
            limits:
              cpu: 600m
              memory: 1200Mi
            {{- end }}
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            {{- if .Values.rabbitmq.auth.existingPasswordSecret }}
            - secretRef:
                name: {{ .Values.rabbitmq.auth.existingPasswordSecret }}
            {{- end }}
          env:
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            {{- if not .Values.rabbitmq.auth.existingPasswordSecret }}
            - name: rabbitmq-password
              value: '{{ .Values.rabbitmq.auth.password }}'
            {{- end }}
            - name: RABBIT_MQ_EASY_CONNECTION_STRING
              value: 'host={{ .Values.global.rabbitmq.connection.url }};port={{ .Values.global.rabbitmq.connection.port }};username={{ .Values.global.rabbitmq.connection.user }};password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: SERVICE_ADDRESSES__VOICE_VERIFIER_SERVICE
              value: 'http://voice-verifier-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: SERVICE_ADDRESSES__BINARY_STORAGE_SERVICE
              value: 'http://binarystorage-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: SERVICE_ADDRESSES__ASSURE_IDENTITY_SERVICE
              value: 'http://assure-identity-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: SERVICE_ADDRESSES__LICENSE_SERVICE
              value: 'http://license-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}:5010'
            - name: ENABLE_AUDIT_LOG
              value: '{{ .Values.global.lumenvox.enableAudit }}'
            - name: DEPLOYMENT_RECONNECTION_TIMEOUT_SECONDS
              value: '{{ .Values.global.lumenvox.deploymentReconnectionTimeoutSec }}'
            - name: SERVICE_START_DELAY_SECONDS
              value: '6'

      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      initContainers:
        - name: wait-for-deployment-service
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/cloud-init-tools{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          command: ["curl2"]
          args: ["http://deployment-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}:90/health", "Deployment Service"]
