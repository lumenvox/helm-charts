apiVersion: apps/v1
kind: Deployment
metadata:
  name: assure-vbs
  namespace: {{ default .Release.Namespace .Values.defaultNamespace }}
  labels:
    app: assure-vbs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assure-vbs
  template:
    metadata:
      labels:
        app: assure-vbs
        # No Prometheus scraping for now
      annotations:
        {{- if .Values.linkerd.enabled }}
        {{- if eq .Values.linkerd.ingressMode "nginx" }}
        linkerd.io/inject: enabled
        {{- else }}
        # Use traefik mode
        linkerd.io/inject: ingress
        {{- end }}
        {{- end }}
    spec:
      containers:
        - name: assure-vbs
          image: {{ .Values.image.repository }}/cloud-assure-api{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: {{ .Values.probes.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: {{ .Values.probes.periodSeconds }}
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            {{- if .Values.lumenvox.enforceLimits }}
            limits:
              cpu: 1500m
              memory: 800Mi
            {{- end }}
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            {{- if .Values.rabbitmq.auth.existingPasswordSecret }}
            - secretRef:
                name: {{ .Values.rabbitmq.auth.existingPasswordSecret }}
            {{- end }}
          env:
            - name: RABBIT_MQ_CONNECTION_STRING
              value: 'amqp://{{ .Values.rabbitmq.connection.user }}:$(rabbitmq-password)@{{ .Values.rabbitmq.connection.url }}:{{ .Values.rabbitmq.connection.port }}'
            - name: RABBIT_MQ_EASY_CONNECTION_STRING
              value: 'host={{ .Values.rabbitmq.connection.url }};port={{ .Values.rabbitmq.connection.port }};username={{ .Values.rabbitmq.connection.user }};password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: ENABLE_AUDIT_LOG
              value: '{{ .Values.enableAudit }}'
            - name: DEPLOYMENT_RECONNECTION_TIMEOUT_SECONDS
              value: '{{ .Values.lumenvox.deploymentReconnectionTimeoutSec }}'

      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      initContainers:
        - name: wait-for-deployment-service
          image: {{ .Values.image.repository }}/cloud-init-tools{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["curl2"]
          args: ["http://deployment-service.{{ default .Release.Namespace .Values.defaultNamespace }}:90/health", "Deployment Service"]
