apiVersion: v1
kind: ConfigMap
metadata:
  name: lumenvox-configmap
  namespace: {{ .Release.Namespace }}
data:
  ConnectionStrings__PostgresConnection: 'Server={{ .Values.database.connectionURL }};Port={{ .Values.database.connectionPort }};User ID={{ .Values.database.connectionUser }};Password={{ .Values.database.connectionPass }};Database=aether_deployment_db;Integrated Security=true;Pooling=true;'
  ASPNETCORE_ENVIRONMENT: 'Production'
  MOCK_TEST_DATA: '{{ .Values.mockData.mockTestData }}'
  ServiceAddresses__DeploymentService: 'http://deployment-service.{{ .Release.Namespace }}'
  ServiceAddresses__VoiceVerifierService: 'http://voice-verifier-service.{{ .Release.Namespace }}'
  ServiceAddresses__EngineResourceService: 'http://engineresource-service.{{ .Release.Namespace }}'
  ServiceAddresses__ConfigurationService: 'http://configuration-service.{{ .Release.Namespace }}'
  ServiceAddresses__AssureVbs: 'http://assure-vbs-service.{{ .Release.Namespace }}'
  ServiceAddresses__AssureIdentityService: 'http://assure-identity-service.{{ .Release.Namespace }}'
  ServiceAddresses__LicenseService: 'http://license-service.{{ .Release.Namespace }}'
  ServiceAddresses__BinaryStorageService: 'http://binarystorage-service.{{ .Release.Namespace }}'
  DOCKER_REGISTRY: '{{ .Values.docker.registry }}'
  COMPOSE_PROJECT_NAME: '{{ .Values.composeProjectName }}'
  DEPLOYMENT_POSTGRES_CONNECTION_STRING: 'Server={{ .Values.database.connectionURL }};Port={{ .Values.database.connectionPort }};User ID={{ .Values.database.connectionUser }};Password={{ .Values.database.connectionPass }};Database=aether_deployment_db;Integrated Security=true;Pooling=true;'
  DASHBOARD_POSTGRES_CONNECTION_STRING: 'Server={{ .Values.database.connectionURL }};Port={{ .Values.database.connectionPort }};User ID={{ .Values.database.connectionUser }};Password={{ .Values.database.connectionPass }};Database=aether_dashboard_db;Integrated Security=true;Pooling=true;'
  RABBIT_MQ_CONNECTION_STRING: 'amqp://{{ .Values.rabbitmq.connectionUser }}:{{ .Values.rabbitmq.connectionPass }}@{{ .Values.rabbitmq.connectionURL }}:{{ .Values.rabbitmq.connectionPort }}'
  DB_USER_COMMON: '{{ .Values.database.commonUser }}'
  DB_PASS_COMMON: '{{ .Values.database.commonPass }}'
  POSTGRES_DB: '{{ .Values.database.postgresDB }}'
  EncryptionSettings__UseEncryption: '{{ .Values.encryption.useEncryption }}'
  EncryptionSettings__MasterKeyProvider: '{{ .Values.encryption.masterKeyProvider }}'
  EncryptionSettings__MasterKey: '{{ .Values.encryption.masterEncryptionKey }}'
  WEB_USER_COMMON: '{{ .Values.web.commonUser }}'
  WEB_PASS_COMMON: '{{ .Values.web.commonPass }}'
  AETHER_ENV_SERVICE_START_DELAY_SECONDS: '5'
  AETHER_RUN_DATABASE_MIGRATIONS: 'true'
  AETHER_EXIT_AFTER_DATABASE_MIGRATIONS: 'false'
  ENABLE_ELASTICSEARCH: '{{ .Values.logging.enableElasticsearch }}'
  SERILOG_DEFAULT_LOGGING_LEVEL: '{{ .Values.logging.defaultLevel }}'
  SERILOG_OVERRIDE_MICROSOFT_LOGGING_LEVEL: '{{ .Values.logging.overrideMicrosoftLevel }}'
  SERILOG_OVERRIDE_SYSTEM_LOGGING_LEVEL: '{{ .Values.logging.overrideSystemLevel }}'
  SERILOG_OVERRIDE_GRPC_LOGGING_LEVEL: '{{ .Values.logging.overrideGrpcLevel }}'
  Audit: 'true'
  MASTER_ENCRYPTION_KEY: '{{ .Values.encryption.masterEncryptionKey }}'
  MockDataSettings__DeploymentsJson: '[{"DeploymentId":1,"Key":"RedisConnectionString","Value":"{{ .Values.mockData.redisConnectionString }}"},{"DeploymentId":1,"Key":"CONFIGURATION_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.mockData.databaseConnectionCreds }};Database=aether_configuration_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":1,"Key":"ASSURE_IDENTITY_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.mockData.databaseConnectionCreds }};Database=aether_assure_identity_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":1,"Key":"BINARY_STORAGE_CONNECTION_STRING","Value":"{\u0022CollectionName\u0022:\u0022BinaryStorage\u0022,\u0022ConnectionString\u0022:\u0022{{ .Values.mockData.mongoDbConnectionCreds }}\u0022,\u0022DatabaseName\u0022:\u0022aether_binary_db\u0022,\u0022StorageType\u0022:\u0022MongoDb\u0022}"},{"DeploymentId":1,"Key":"RABBIT_MQ_URI","Value":"amqp://{{ .Values.mockData.rabbitmqConnectionCreds }}"}]'
  MockDataSettings__MasterKeysJson: '{{ .Values.mockData.masterJsonKeys }}'
  MockDataSettings__CustomerKeysJson: '{{ .Values.mockData.customerJsonKeys }}'
