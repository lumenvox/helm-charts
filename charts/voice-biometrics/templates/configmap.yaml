apiVersion: v1
kind: ConfigMap
metadata:
  name: lumenvox-configmap
  namespace: '{{ default .Release.Namespace .Values.defaultNamespace }}'
data:
  DOCKER_REGISTRY: '{{ .Values.image.repository }}'
  COMPOSE_PROJECT_NAME: '{{ .Values.composeProjectName }}'
  DB_USER_COMMON: '{{ .Values.postgresql.connection.user }}'
  WEB_USER_COMMON: '{{ .Values.web.commonUser }}'
  ENABLE_ELASTICSEARCH: '{{ .Values.logging.enableElasticsearch }}'
  SERILOG_DEFAULT_LOGGING_LEVEL: '{{ .Values.logging.defaultLevel }}'
  SERILOG_OVERRIDE_MICROSOFT_LOGGING_LEVEL: '{{ .Values.logging.overrideMicrosoftLevel }}'
  SERILOG_OVERRIDE_SYSTEM_LOGGING_LEVEL: '{{ .Values.logging.overrideSystemLevel }}'
  SERILOG_OVERRIDE_GRPC_LOGGING_LEVEL: '{{ .Values.logging.overrideGrpcLevel }}'
  LOCAL_CACHE_REFRESH_SECONDS: '21600'
  ASPNETCORE_ENVIRONMENT: 'Production'
  ASPNETCORE_Kestrel__EndPoints__Http1__Url: 'http://+:90'
  ASPNETCORE_Kestrel__EndPoints__Http1__Protocols: 'Http1'
  ASPNETCORE_Kestrel__EndPoints__Http2__Url: 'http://+:80'
  ASPNETCORE_Kestrel__EndPoints__Http3__Url: 'https://+:443'
  HTTPS_CERTIFICATE: '{{ .Values.https.cert }}'
  HTTPS_CERTIFICATE_KEY: '{{ .Values.https.certKey }}'
  HTTPS_CERTIFICATE_PASSWORD: '{{ .Values.https.certPassword }}'
  USE_SELF_SIGNED_CERTIFICATE: '{{ .Values.https.useSelfSignedCert }}'
  APPLICATION_DOMAIN: '{{ .Values.https.applicationDomain }}'
  SERVICE_ADDRESSES__ASSURE_API: 'http://assure-vbs-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  SERVICE_ADDRESSES__TRANSACTION_SERVICE: 'http://transaction-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  SERVICE_ADDRESSES__AUDIT_SERVICE: 'http://audit-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  SERVICE_ADDRESSES__REPORTING_API: 'http://reporting-api-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  SERVICE_ADDRESSES__MANAGEMENT_API: 'http://management-api-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  DbSettings__CommandTimeoutSeconds: '{{ .Values.postgresql.commandTimeoutSeconds }}'
  ENV_SERVICE_START_DELAY_SECONDS: '{{ .Values.lumenvox.service.startDelaySeconds }}'
  {{- if .Values.mockData.enabled }}
  MOCK_TEST_DATA: '{{ .Values.mockData.testDataString }}'
  MockDataSettings__MasterKeysJson: '{{ .Values.mockData.jsonKeys.master }}'
  MockDataSettings__CustomerKeysJson: '{{ .Values.mockData.jsonKeys.customer }}'
  MockDataSettings__EmergencyPublicKeysJson: '{{ .Values.mockData.jsonKeys.emergencyPublic }}'
  {{- end }}
  POSTGRES_DB: '{{ .Values.postgresql.postgresDb }}'
  RABBIT_RETRYING_TIME_SECONDS: '{{ .Values.rabbitmq.retryTime }}'
