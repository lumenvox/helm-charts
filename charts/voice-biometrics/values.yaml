# Default values for voice-biometrics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "lumenvox"
  pullPolicy: "Always"
  # Overrides the image tag whose default is the chart appVersion.
  tag: ":2.0.0"

defaultNamespace: "lumenvox"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

hostnameSuffix: "testmachine.com"
composeProjectName: ""
lumenvox:
  # Time to allow support services (such as databases) to become available. Typically, 0 in production
  deploymentStartDelaySeconds: 0
  # Maximum amount of time allowed for deployment database connection to succeed
  deploymentReconnectionTimeoutSec: 30

  metrics:
    # Whether to expose internal services' ingress (likely only used by LumenVox development)
    enableEndpoints: false

  # Internally used by LumenVox - should not be enabled by customers
  enableTestEndpoints: false

  service:
    # Time from startup to allow deployment service
    startDelaySeconds: 0
    readinessProbe:
      initialDelaySeconds: 5
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5

  enforceLimits: false

  ingress:
    # Specify an ingressClassName for advanced HTTP ingress configuration (default nginx). Unset to use default ingress
    className:

licensing:
  # Note: licensing (and therefore system) will not work without a valid clusterGuid value
  clusterGuid: "GET-CLUSTER-GUID-FROM-LUMENVOX"
  reportFreqMins: "1440"
  reportSyncHour: "1"
  reportSyncMin: "0"

redis:
  # Specifies whether redis helm chart should be installed
  enabled: true
  auth:
    existingSecret: redis-existing-secret

  connection:
    url: "lumenvox-redis-master.lumenvox"
    port: 6379
  architecture: standalone
  master:
    persistence:
      enabled: false

postgresql:
  # Specifies whether postgresql helm chart should be installed
  enabled: true
  connection:
    url: "lumenvox-postgresql.lumenvox"
    port: 5432
    user: "lvuser"
  postgresqlDatabase: "postgres"
  postgresqlUsername: "lvuser"
  user: "lvuser"
  existingSecret: postgres-existing-secret
  commandTimeoutSeconds: 100
  runMigrations: 'true'
  exitAfterMigrations: 'false'
  persistence:
    enabled: false
  persistentVolume:
    storageSize: 2Gi
  image:
    tag: 13

mongodb:
  # Specifies whether mongodb helm chart should be installed
  enabled: true
  architecture: "standalone"
  persistence:
    enabled: false
  auth:
    rootUser: 'lvuser'
    existingSecret: mongodb-existing-secret
  connection:
    url: "lumenvox-mongodb.lumenvox"
    port: 27017
#  image:
#    # Note using an older version due to incompatibilities on some test machines
#    tag: 4.2

rabbitmq:
  # Specifies whether rabbitmq helm chart should be installed
  enabled: true
  ingress:
    enabled: true
    hostname: "rabbitmq.testmachine.com"
    # optional ingressClassName for advanced ingress handling. Comment out to use default ingress
    ingressClassName: "nginx"
  init:
    checkManagementEndpoint: true
  auth:
    username: "lvuser"
    existingPasswordSecret: "rabbitmq-existing-secret"
  connection:
    url: "lumenvox-rabbitmq.lumenvox"
    port: 5672
    user: "lvuser"
  persistence:
    enabled: false
    size: 4Gi
  retryTime: 60

traefik:
  # Specifies whether traefik ingress controller should be installed (recommended as default ingress for LumenVox)
  enabled: true
  namespace: "lumenvox"

  service:
    type: ClusterIP

  ingress:
    kubernetes:
      dashboardEnabled: false

web:
  commonUser: "lvuser"
  commonPass: "iJ3WX7icYL4j3d"

logging:
  enableElasticsearch: false
  defaultLevel: "Information"
  overrideMicrosoftLevel: "Information"
  overrideSystemLevel: "Information"
  overrideGrpcLevel: "Information"

encryption:
  masterEncryptionSecret: encryption-secret
  masterKeyProvider: "EnvVariableMasterKeyService"
  useEncryption: true

mockData:
  enabled: false
  testDataString: ""
  deploymentId: ""
  jsonKeys:
    master: ""
    customer: ""
    emergencyPublic: ""

probes:
  periodSeconds: 5

enableAudit: false


grafana:
  # Specifies whether grafana helm chart should be installed
  enabled: true
  ingress:
    hosts: ['grafana.testmachine.com']
  admin:
    user: "lvuser"
    existingSecret: "grafana-existing-secret"

  config:
    useGrafanaIniFile: true
    grafanaIniConfigMap: grafana-configmap

  datasources:
    secretName: prometheus-grafana-secret

  sidecar:
    dashboards:
      enabled: true
      folder: /opt/bitnami/grafana/public/dashboards

  persistence:
    enabled: false

prometheus:
  # Specifies whether prometheus helm chart should be installed
  enabled: true

  connection:
    url: http://lumenvox-prometheus-server

  server:
    persistentVolume:
      enabled: false
  alertmanager:
    persistentVolume:
      enabled: false

linkerd:
  dashboard:
    # Applies ingress for linkerd dashboard when enabled (true)
    enabled: true
    # Namespace used by linkerd dashboard
    namespace: linkerd-viz
    # Hostname prefix to use for ingress
    hostPrefix: linkerd
    # Opaque secret value for linkerd dashboard ingress
    ingressSecret: YWRtaW46JGFwcjEkbjdDdTZnSGwkRTQ3b2dmN0NPOE5SWWpFakJPa1dNLgoK

  # Whether linkerd is enabled in deployments
  enabled: true
  # ingress mode can be either nginx or traefik
  ingressMode: nginx
  # optional class name to assign to linkerd ingress (i.e. "nginx" for example)
  ingressClassName: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
